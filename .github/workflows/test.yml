name: Test CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn build

  lint:
    name: Run Linters
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn lint:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn build
      - run: yarn test

  coverage:
    name: Run Coverage Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn build
      - run: yarn coverage
      - uses: VeryGoodOpenSource/very_good_coverage@v1
        with:
          path: "./coverage/lcov.info"
          min_coverage: 100

  forge:
    name: Run Forge Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Run tests
        run: forge test -vvv

  # uncomment to enable fork tests, once an ETH_RPC_URL secret is set
  # forge-fork:
  #   name: Run Forge Tests (Forked against Mainnet)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly

  #     - name: Install forge dependencies
  #       run: forge install

  #     - name: Run tests
  #       env:
  #         ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
  #         BLOCK_NUMBER: 15149829
  #       run: FOUNDRY_PROFILE=fork forge test -vvv --fork-url $ETH_RPC_URL --fork-block-number $BLOCK_NUMBER
